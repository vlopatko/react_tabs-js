{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTabId","find","tab","id","visibleContent","content","className","map","cn","href","onClick","event","title","App","listOfTabs","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,GAAe,UAAAH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA5B,eAA4CK,KAC5DN,EAAK,GAAGM,GAQPC,EAAmCP,EALJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,KAEnCK,QAKzB,OACE,sBACE,UAAQ,gBADV,UAGE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBACE,UAAQ,MACRI,UAAWE,IAAG,CACZ,YAAaR,IAAiBE,EAAIC,KAHtC,SAOE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,SAACC,GACJX,IAAiBE,EAAIC,IACvBJ,EAAcG,IALpB,SASGA,EAAIU,SAXFV,EAAIC,WAkBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QC3CIP,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASP,QAAS,eACxC,CAAEF,GAAI,QAASS,MAAO,QAASP,QAAS,eACxC,CAAEF,GAAI,QAASS,MAAO,QAASP,QAAS,gBAG7BQ,EAAM,WACjB,IAEyBC,EAFzB,EAA0CC,mBAASlB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBkB,EAAtB,KAYA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,oCAZqBQ,EAaiBjB,EAZlBiB,EAAWb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEnCc,UAanB,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACG,GACrBc,EAAiBd,EAAIC,WCnBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.913b1991.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTabId = tabs.find(tab => tab.id === selectedTabId)?.id\n    || tabs[0].id;\n\n  const getVisibleContent = (listOfTabs) => {\n    const preparedContent = listOfTabs.find(tab => tab.id === currentTabId);\n\n    return preparedContent.content;\n  };\n\n  const visibleContent = getVisibleContent(tabs);\n\n  return (\n    <div\n      data-cy=\"TabsComponent\"\n    >\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={cn({\n                'is-active': currentTabId === tab.id,\n              })}\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(event) => {\n                  if (currentTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {visibleContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getVisibleTitle = (listOfTabs) => {\n    const preparedTitle = listOfTabs.find(tab => tab.id === selectedTabId);\n\n    return preparedTitle.title;\n  };\n\n  const onTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getVisibleTitle(tabs)}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}